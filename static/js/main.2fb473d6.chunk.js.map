{"version":3,"sources":["Components/Message/Message.js","Components/Grid/GridComponents/Cell.js","Components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["Message","Cell","turnSet","useState","filled","filledSet","className","onClick","prev","Grid","turn","App","player","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAMeA,MAJf,WACE,OAAO,qDCYMC,MAbf,YAA4B,IAAZC,EAAW,EAAXA,QACd,EAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAKA,OACE,qBAAKC,UAAU,OAAOC,QALX,WACXF,EAAU,KACVH,GAAQ,SAACM,GAAD,OAAUA,EAAO,MAGzB,SACGJ,K,MCYQK,MAnBf,WACE,MAAwBN,mBAAS,GAAjC,mBAAOO,EAAP,KAAaR,EAAb,KAEA,OACE,0BAASI,UAAU,OAAnB,UACE,cAAC,EAAD,CAAMJ,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACf,cAAC,EAAD,CAAMA,QAASA,IACdQ,MCFQC,MAXf,WACE,MAA4BR,mBAAS,GAArC,mBAAOS,EAAP,KAEA,OAFA,KAGE,sBAAKN,UAAU,YAAf,UACE,cAAC,EAAD,CAASM,OAAQA,IACjB,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2fb473d6.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Message() {\n  return <section>Player 1 turn</section>;\n}\n\nexport default Message;\n","import React, { useState } from \"react\";\n\nfunction Cell({ turnSet }) {\n  const [filled, filledSet] = useState(null);\n  const fill = () => {\n    filledSet(\"X\");\n    turnSet((prev) => prev + 1);\n  };\n  return (\n    <div className=\"cell\" onClick={fill}>\n      {filled}\n    </div>\n  );\n}\n\nexport default Cell;\n","import React, { useState } from \"react\";\nimport Cell from \"./GridComponents/Cell\";\nimport \"./Grid.scss\";\nfunction Grid() {\n  const [turn, turnSet] = useState(0);\n\n  return (\n    <section className=\"grid\">\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      <Cell turnSet={turnSet} />\n      {turn}\n    </section>\n  );\n}\n\nexport default Grid;\n","import \"./App.css\";\nimport Message from \"./Components/Message/Message\";\nimport Grid from \"./Components/Grid/Grid\";\nimport { useState } from \"react\";\nfunction App() {\n  const [player, playerSet] = useState(1);\n\n  return (\n    <div className=\"container\">\n      <Message player={player} />\n      <Grid />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}