{"version":3,"sources":["Components/ThemeContext.js","Components/Message/Message.js","Components/Grid/GridComponents/Cell.js","Components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Message","player","turn","useContext","Cell","useState","filled","filledSet","turnSet","className","onClick","prev","Grid","App","playerSet","turnFunction","useEffect","console","log","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAIeA,G,MAFMC,IAAMC,cAAc,CAAC,EAAG,gB,OCW9BC,MAVf,YAA8B,IAAXC,EAAU,EAAVA,OACXC,EAAOC,qBAAWN,GAAc,GAEtC,OACE,8CACUI,EADV,UACyBC,EADzB,QCaWE,MAhBf,WACE,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGA,GAFcJ,qBAAWN,GAAc,GAEfM,qBAAWN,IAAnC,mBAAaW,GAAb,WAKA,OACE,qBAAKC,UAAU,OAAOC,QALX,WACXH,EAAU,KACVC,GAAQ,SAACG,GAAD,OAAUA,EAAO,MAGzB,SACGL,K,MCIQM,MAhBf,WACE,OACE,0BAASH,UAAU,OAAnB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCUSI,MAnBf,WACE,MAA4BR,mBAAS,GAArC,mBAAOJ,EAAP,KAAea,EAAf,KACMC,EAAeV,mBAAS,GACxBH,EAAOa,EAAa,GAM1B,OALAC,qBAAU,WACRC,QAAQC,IAAIhB,GACQY,EAAhBZ,EAAO,IAAM,EAAa,EACf,KACd,CAACa,IAEF,cAAC,EAAaI,SAAd,CAAuBC,MAAOL,EAA9B,SACE,sBAAKN,UAAU,YAAf,UACE,cAAC,EAAD,CAASR,OAAQA,IACjB,cAAC,EAAD,UCNOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.88d49ea6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ThemeContext = React.createContext([1, () => {}]);\n\nexport default ThemeContext;\n","import React, { useContext, useEffect } from \"react\";\nimport ThemeContext from \"../ThemeContext\";\n\nfunction Message({ player }) {\n  const turn = useContext(ThemeContext)[0];\n\n  return (\n    <section>\n      Player {player} turn ({turn})\n    </section>\n  );\n}\n\nexport default Message;\n","import React, { useState, useContext } from \"react\";\nimport ThemeContext from \"../../ThemeContext\";\nimport AppTheme from \"../../../Colors\";\n\nfunction Cell() {\n  const [filled, filledSet] = useState(null);\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n  const [turn, turnSet] = useContext(ThemeContext);\n  const fill = () => {\n    filledSet(\"X\");\n    turnSet((prev) => prev + 1);\n  };\n  return (\n    <div className=\"cell\" onClick={fill}>\n      {filled}\n    </div>\n  );\n}\n\nexport default Cell;\n","import React, { useState } from \"react\";\nimport Cell from \"./GridComponents/Cell\";\nimport \"./Grid.scss\";\nfunction Grid() {\n  return (\n    <section className=\"grid\">\n      <Cell />\n      <Cell />\n      <Cell />\n      <Cell />\n      <Cell />\n      <Cell />\n      <Cell />\n      <Cell />\n      <Cell />\n    </section>\n  );\n}\n\nexport default Grid;\n","import \"./App.css\";\nimport Message from \"./Components/Message/Message\";\nimport Grid from \"./Components/Grid/Grid\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ThemeContext from \"./Components/ThemeContext\";\nfunction App() {\n  const [player, playerSet] = useState(1);\n  const turnFunction = useState(1);\n  const turn = turnFunction[0];\n  useEffect(() => {\n    console.log(turn);\n    if (turn % 2 === 0) playerSet(2);\n    else playerSet(1);\n  }, [turnFunction]);\n  return (\n    <ThemeContext.Provider value={turnFunction}>\n      <div className=\"container\">\n        <Message player={player} />\n        <Grid />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}