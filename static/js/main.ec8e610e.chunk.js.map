{"version":3,"sources":["Components/ThemeContext.js","Components/Message/Message.js","Components/Grid/GridComponents/Cell.js","Components/Grid/Grid.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","Message","player","turn","useContext","Cell","cellFillSet","useState","filled","filledSet","turnSet","fill","a","decidePlayer","prev","useEffect","console","log","className","onClick","Grid","cell1FillSet","cell2FillSet","cell3FillSet","cell4FillSet","cell5FillSet","cell6FillSet","cell7FillSet","cell8FillSet","cell9FillSet","App","playerSet","turnFunction","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIeA,G,MAFMC,IAAMC,cAAc,CAAC,EAAG,gB,OCW9BC,MAVf,YAA8B,IAAXC,EAAU,EAAVA,OACXC,EAAOC,qBAAWN,GAAc,GAEtC,OACE,8CACUI,EADV,UACyBC,EADzB,Q,uBC6BWE,MAhCf,YAAwC,IAAxBH,EAAuB,EAAvBA,OAAQI,EAAe,EAAfA,YACtB,EAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGA,GAFcL,qBAAWN,GAAc,GAEfM,qBAAWN,IAAnC,mBAAaY,GAAb,WACMC,EAAI,uCAAG,sBAAAC,EAAA,sDACXC,IACAH,GAAQ,SAACI,GAAD,OAAUA,EAAO,KAFd,2CAAH,qDAIVC,qBAAU,WACRT,EAAYE,GACZQ,QAAQC,IAAIT,KACX,CAACA,IACJ,IAAMK,EAAe,WACnB,OAAQX,GACN,KAAK,EACHO,EAAU,KACV,MACF,KAAK,EACHA,EAAU,KACV,MACF,QACEO,QAAQC,IAAR,kBAGN,OACE,qBAAKC,UAAU,OAAOC,QAASR,EAA/B,SACGH,K,MCFQY,MA1Bf,YAA2B,IAAXlB,EAAU,EAAVA,OACd,EAAkCK,mBAAS,KAA3C,mBAAkBc,GAAlB,WACA,EAAkCd,mBAAS,KAA3C,mBAAkBe,GAAlB,WACA,EAAkCf,mBAAS,KAA3C,mBAAkBgB,GAAlB,WACA,EAAkChB,mBAAS,IAA3C,mBAAkBiB,GAAlB,WACA,EAAkCjB,mBAAS,IAA3C,mBAAkBkB,GAAlB,WACA,EAAkClB,mBAAS,IAA3C,mBAAkBmB,GAAlB,WACA,EAAkCnB,mBAAS,IAA3C,mBAAkBoB,GAAlB,WACA,EAAkCpB,mBAAS,IAA3C,mBAAkBqB,GAAlB,WACA,EAAkCrB,mBAAS,IAA3C,mBAAkBsB,GAAlB,WAEA,OACE,0BAASX,UAAU,OAAnB,UACE,cAAC,EAAD,CAAMhB,OAAQA,EAAQI,YAAae,IACnC,cAAC,EAAD,CAAMnB,OAAQA,EAAQI,YAAagB,IACnC,cAAC,EAAD,CAAMpB,OAAQA,EAAQI,YAAaiB,IACnC,cAAC,EAAD,CAAMrB,OAAQA,EAAQI,YAAakB,IACnC,cAAC,EAAD,CAAMtB,OAAQA,EAAQI,YAAamB,IACnC,cAAC,EAAD,CAAMvB,OAAQA,EAAQI,YAAaoB,IACnC,cAAC,EAAD,CAAMxB,OAAQA,EAAQI,YAAaqB,IACnC,cAAC,EAAD,CAAMzB,OAAQA,EAAQI,YAAasB,IACnC,cAAC,EAAD,CAAM1B,OAAQA,EAAQI,YAAauB,QCA1BC,MAnBf,WACE,MAA4BvB,mBAAS,GAArC,mBAAOL,EAAP,KAAe6B,EAAf,KACMC,EAAezB,mBAAS,GACxBJ,EAAO6B,EAAa,GAM1B,OALAjB,qBAAU,WACYgB,EAAhB5B,EAAO,IAAM,EAAa,EACf,KACd,CAAC6B,IAGF,cAAC,EAAaC,SAAd,CAAuBC,MAAOF,EAA9B,SACE,sBAAKd,UAAU,YAAf,UACE,cAAC,EAAD,CAAShB,OAAQA,IACjB,cAAC,EAAD,CAAMA,OAAQA,UCNPiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ec8e610e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ThemeContext = React.createContext([1, () => {}]);\n\nexport default ThemeContext;\n","import React, { useContext, useEffect } from \"react\";\nimport ThemeContext from \"../ThemeContext\";\n\nfunction Message({ player }) {\n  const turn = useContext(ThemeContext)[0];\n\n  return (\n    <section>\n      Player {player} turn ({turn})\n    </section>\n  );\n}\n\nexport default Message;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport ThemeContext from \"../../ThemeContext\";\nimport AppTheme from \"../../../Colors\";\n\nfunction Cell({ player, cellFillSet }) {\n  const [filled, filledSet] = useState(null);\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n  const [turn, turnSet] = useContext(ThemeContext);\n  const fill = async () => {\n    decidePlayer();\n    turnSet((prev) => prev + 1);\n  };\n  useEffect(() => {\n    cellFillSet(filled);\n    console.log(filled);\n  }, [filled]);\n  const decidePlayer = () => {\n    switch (player) {\n      case 1:\n        filledSet(\"X\");\n        break;\n      case 2:\n        filledSet(\"O\");\n        break;\n      default:\n        console.log(`error player`);\n    }\n  };\n  return (\n    <div className=\"cell\" onClick={fill}>\n      {filled}\n    </div>\n  );\n}\n\nexport default Cell;\n","import React, { useState, useEffect } from \"react\";\nimport Cell from \"./GridComponents/Cell\";\nimport \"./Grid.scss\";\nfunction Grid({ player }) {\n  const [cell1Fill, cell1FillSet] = useState(\"1\");\n  const [cell2Fill, cell2FillSet] = useState(\"2\");\n  const [cell3Fill, cell3FillSet] = useState(\"3\");\n  const [cell4Fill, cell4FillSet] = useState(\"\");\n  const [cell5Fill, cell5FillSet] = useState(\"\");\n  const [cell6Fill, cell6FillSet] = useState(\"\");\n  const [cell7Fill, cell7FillSet] = useState(\"\");\n  const [cell8Fill, cell8FillSet] = useState(\"\");\n  const [cell9Fill, cell9FillSet] = useState(\"\");\n\n  return (\n    <section className=\"grid\">\n      <Cell player={player} cellFillSet={cell1FillSet} />\n      <Cell player={player} cellFillSet={cell2FillSet} />\n      <Cell player={player} cellFillSet={cell3FillSet} />\n      <Cell player={player} cellFillSet={cell4FillSet} />\n      <Cell player={player} cellFillSet={cell5FillSet} />\n      <Cell player={player} cellFillSet={cell6FillSet} />\n      <Cell player={player} cellFillSet={cell7FillSet} />\n      <Cell player={player} cellFillSet={cell8FillSet} />\n      <Cell player={player} cellFillSet={cell9FillSet} />\n    </section>\n  );\n}\n\nexport default Grid;\n","import \"./App.css\";\nimport Message from \"./Components/Message/Message\";\nimport Grid from \"./Components/Grid/Grid\";\nimport { useState, useContext, useEffect } from \"react\";\nimport ThemeContext from \"./Components/ThemeContext\";\nfunction App() {\n  const [player, playerSet] = useState(1);\n  const turnFunction = useState(1);\n  const turn = turnFunction[0];\n  useEffect(() => {\n    if (turn % 2 === 0) playerSet(2);\n    else playerSet(1);\n  }, [turnFunction]);\n\n  return (\n    <ThemeContext.Provider value={turnFunction}>\n      <div className=\"container\">\n        <Message player={player} />\n        <Grid player={player} />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}